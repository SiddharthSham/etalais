export declare type EasingImplementation = ((t: number, b: number, c: number, d: number) => number) | ((t: number, b: number, c: number, d: number, s?: number) => number);
export declare const Linear: {
    none: (t: number, b: number, c: number, d: number) => number;
};
export declare const Quad: {
    in: (t: number, b: number, c: number, d: number) => number;
    out: (t: number, b: number, c: number, d: number) => number;
};
export declare const Cubic: {
    in: (t: number, b: number, c: number, d: number) => number;
    out: (t: number, b: number, c: number, d: number) => number;
};
export declare const Quart: {
    in: (t: number, b: number, c: number, d: number) => number;
    out: (t: number, b: number, c: number, d: number) => number;
};
export declare const Quint: {
    in: (t: number, b: number, c: number, d: number) => number;
    out: (t: number, b: number, c: number, d: number) => number;
};
export declare const Sine: {
    in: (t: number, b: number, c: number, d: number) => number;
    out: (t: number, b: number, c: number, d: number) => number;
};
export declare const Expo: {
    in: (t: number, b: number, c: number, d: number) => number;
    out: (t: number, b: number, c: number, d: number) => number;
};
export declare const Circ: {
    in: (t: number, b: number, c: number, d: number) => number;
    out: (t: number, b: number, c: number, d: number) => number;
};
export declare const Back: {
    in: (t: number, b: number, c: number, d: number, s?: number) => number;
    out: (t: number, b: number, c: number, d: number, s?: number) => number;
};
export declare const Bounce: {
    in: (t: number, b: number, c: number, d: number) => number;
    out: (t: number, b: number, c: number, d: number) => number;
};
