export declare type ViewportChangeListener = (state: ViewportState) => void;
export interface ViewportState {
    width: number;
    height: number;
}
export interface ViewportObservable {
    remove: () => void;
}
export declare class ViewportObserver {
    private static _listening;
    private static _state;
    private static lastRafId;
    private static resizeListener?;
    private static listeners;
    private static stateResolver;
    static changed(listener: ViewportChangeListener, throttleTime?: number): ViewportObservable;
    private static removeListener;
    private static checkListeners;
    private static listening;
    static readonly attached: boolean;
    static readonly state: Promise<ViewportState>;
    static update(force?: boolean, silent?: boolean): void;
    private static getStateSum;
    private static handleResize;
    private static attach;
    private static detach;
}
