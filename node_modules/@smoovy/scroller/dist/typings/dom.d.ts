import { EventEmitter } from '@smoovy/event';
import { ElementObserver, ElementObserverConfig, ElementState } from '@smoovy/observer';
export interface ScrollerDomElement {
    container: HTMLElement | ElementState;
    wrapper: HTMLElement | ElementState;
}
export interface ScrollerDomConfig {
    observer?: ElementObserverConfig | false;
    element: HTMLElement | ScrollerDomElement;
}
export declare enum ScrollerDomEvent {
    RECALC = "recalc"
}
export declare class ScrollerDom extends EventEmitter {
    protected config: ScrollerDomConfig;
    container: ElementState;
    wrapper: ElementState;
    observer: ElementObserver;
    private dynamic;
    constructor(config: ScrollerDomConfig);
    recalc(async?: boolean): void;
    attach(): void;
    detach(): void;
}
