declare type TickerUpdateCallback = (delta: number, time: number, kill: () => void) => void;
export declare class TickerThread {
    private calllback;
    dead: boolean;
    constructor(calllback: TickerUpdateCallback);
    update(delta: number, time: number): void;
    kill(): void;
}
export declare class Ticker {
    readonly intervalMs: number;
    ticking: boolean;
    override: boolean;
    private threads;
    private lastTime;
    private minDeltaMs;
    private maxDeltaMs;
    constructor(minMaxFps?: number | [number, number]);
    static requestAnimationFrame(callback: FrameRequestCallback): number;
    static now(): number;
    setMinFPS(fps: number): number;
    readonly minFPS: number;
    setMaxFPS(fps: number): number;
    readonly maxFPS: number;
    tick(delta: number, time?: number): void;
    update(time?: number): void;
    animate(): void;
    kill(): void;
    private buryThread;
    add(callback: TickerUpdateCallback): TickerThread;
}
export {};
